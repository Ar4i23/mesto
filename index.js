(()=>{"use strict";var t=document.querySelector(".modal__input_modal_name"),e=document.querySelector(".modal__input_modal_about"),n=document.querySelector(".profile__image-ellipse"),r=(document.querySelector(".modal__input_naming"),document.querySelector(".modal__input_linking"),document.querySelector(".profile__info-title")),o=document.querySelector(".profile__info-subtitle"),i=document.querySelector(".profile__info-edit-button"),u=document.querySelector(".profile__add-botton"),a=document.forms["profile-form-avatar"],c=document.forms["profile-form-cread"],l=document.forms["profile-form-edit"],s=(document.querySelector(".modal__img"),document.querySelector(".modal__heading"),document.querySelector("#new-element").content),f=document.querySelector(".elements"),y=(document.querySelectorAll(".modal"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_invalid",activeButtonClass:"modal__button",inputErrorClass:"modal__input_error"});function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}var d=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers,this._authorization=this._headers.authorization,this._contenType=this._headers["Content-Type"]}var e,n;return e=t,(n=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject}},{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._authorization}}).then(this._checkResponse)}},{key:"addCardByServer",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._authorization}}).then(this._checkResponse)}},{key:"setUserInfo",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then(this._checkResponse)}},{key:"setUserAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})}).then(this._checkResponse)}},{key:"deleteCardByServer",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t._id),{method:"DELETE",headers:{authorization:this._authorization}}).then(this._checkResponse)}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._authorization}}).then(this._checkResponse)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._authorization}}).then(this._checkResponse)}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}var _=function(){function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this.handleClickImg=n,this.handleClickBtnDelete=o,this._changeLike=i,this._template=r,this._cardId=e._id,this._userId=e.owner._id,this._arrayLikes=e.likes,this._arrayLikesLength=e.likes.length,this._myId=e.myId,this._card=this._template.cloneNode(!0),this._element=this._card.querySelector(".element"),this._btnDelete=this._element.querySelector(".element__button-delete"),this._itemImg=this._element.querySelector(".element__image"),this._itemTitle=this._element.querySelector(".element__title"),this._btnLike=this._element.querySelector(".element__button-like"),this._counterLike=this._element.querySelector(".element__counter-like"),this._imgCard=this._element.querySelector(".element__image")}var e,n;return e=t,(n=[{key:"_generateCard",value:function(){return this._checkVisibleForTrashButton(),this._checkLikeStatus(),this._itemImg.src=this._data.link,this._itemImg.alt=this._data.name,this._itemTitle.textContent=this._data.name,this._card}},{key:"_checkLikeStatus",value:function(){var t=this;this._arrayLikes.forEach((function(e){e._id!==t._myId||t._btnLike.classList.add("element__button-like_active")})),this._counterLike.textContent=this._arrayLikesLength}},{key:"_checkVisibleForTrashButton",value:function(){this._btnDelete.classList.add(this._userId===this._myId?"element__button-delete_visible":"element__button-delete_hidden")}},{key:"_handleLike",value:function(){this._changeLike(this._cardId,this._btnLike)}},{key:"_setEventListeners",value:function(){var t=this;this._btnDelete.addEventListener("click",(function(e){t.handleClickBtnDelete(t._data,e)})),this._btnLike.addEventListener("click",(function(){t._handleLike()})),this._imgCard.addEventListener("click",(function(){t.handleClickImg(t._data.name,t._data.link)}))}},{key:"changedLike",value:function(t){this._btnLike.classList.toggle("element__button-like_active"),this._counterLike.textContent=t.length}},{key:"getCard",value:function(){return this._generateCard(),this._setEventListeners(),this._card}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==v(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===v(o)?o:String(o)),r)}var o}var g=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=n}var e,n;return e=t,(n=[{key:"renderItem",value:function(t){this._renderer(t)}},{key:"addItemPrepend",value:function(t){this._container.prepend(t)}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}console.log;var E=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._btnClose=this._popup.querySelector(".modal__close"),this._hendleEscClose=this._hendleEscClose.bind(this),this.close=this.close.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._hendleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._hendleEscClose)}},{key:"_hendleEscClose",value:function(t){if("Escape"===t.key){var e=document.querySelector("modal_opened");this.close(e)}}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("modal_opened")&&t.close(),e.target.classList.contains("modal__close")&&t.close()}))}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=C(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},P.apply(this,arguments)}function L(t,e){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},L(t,e)}function C(t){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},C(t)}var I=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&L(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=C(r);if(o){var n=C(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===j(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=e.hendleDelete;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._hendleDelete=r,n._form=n._popup.querySelector(".modal__form"),n._btnYes=n._form.querySelector(".modal__button"),n._btnYesDefault=n._btnYes.textContent,n}return e=u,(n=[{key:"open",value:function(t,e){P(C(u.prototype),"open",this).call(this),this._element=t,this._btnDelete=e}},{key:"setupDefaultText",value:function(){this._btnYes.textContent=this._btnYesDefault}},{key:"setEventListeners",value:function(){var t=this;P(C(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._hendleDelete(t._element,t._btnDelete),t._btnYes.textContent="".concat(t._btnYes.textContent," ...")}))}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=D(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},q.apply(this,arguments)}function B(t,e){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},B(t,e)}function D(t){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},D(t)}var x=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&B(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=D(r);if(o){var n=D(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===T(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._img=e._popup.querySelector(".modal__img"),e._title=e._popup.querySelector(".modal__heading"),e}return e=u,(n=[{key:"open",value:function(t,e){q(D(u.prototype),"open",this).call(this),this._img.src=e,this._img.alt=t,this._title.textContent=t}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===U(o)?o:String(o)),r)}var o}const z=function(){function t(e,n){var r=n.inputSelector,o=n.submitButtonSelector,i=n.inactiveButtonClass,u=n.activeButtonClass,a=n.inputErrorClass;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=e,this._inputs=Array.from(this._form.querySelectorAll(r)),this._button=this._form.querySelector(o),this._inputErrorClass=a,this._inactiveButton=i,this._activeButton=u}var e,n;return e=t,(n=[{key:"enableValidation",value:function(){this._setEventListenersValidation()}},{key:"_setEventListenersValidation",value:function(){var t=this;this._inputs.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._hasInvalidInput()?t._disableButton():t._enableButton()}))}))}},{key:"_checkInputValidity",value:function(t){var e=document.querySelector("#".concat(t.id,"-error"));t.validity.valid?(e.textContent="",this._removeRedLine(t)):(e.textContent=t.validationMessage,this._addRedLine(t))}},{key:"_hasInvalidInput",value:function(){return this._inputs.some((function(t){return!t.validity.valid}))}},{key:"_disableButton",value:function(){this._button.classList.add(this._inactiveButton),this._button.setAttribute("disabled",!0)}},{key:"_enableButton",value:function(){this._button.classList.remove(this._inactiveButton),this._button.removeAttribute("disabled")}},{key:"_removeRedLine",value:function(t){t.classList.remove(this._inputErrorClass)}},{key:"_addRedLine",value:function(t){t.classList.add(this._inputErrorClass)}},{key:"resetErrorAndClearInput",value:function(){var t=this;this._inputs.forEach((function(e){document.querySelector("#".concat(e.id,"-error")).textContent="",e.classList.remove(t._inputErrorClass)})),this._disableButton()}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function Y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===V(o)?o:String(o)),r)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=F(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},N.apply(this,arguments)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function F(t){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},F(t)}console.log;var H=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=F(r);if(o){var n=F(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=e.formSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._formSubmit=r,n._form=n._popup.querySelector(".modal__form"),n._inputs=n._form.querySelectorAll(".modal__input"),n._btnSave=n._form.querySelector(".modal__button"),n._btnSaveDefault=n._btnSave.textContent,n}return e=u,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputs.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){N(F(u.prototype),"open",this).call(this)}},{key:"close",value:function(){N(F(u.prototype),"close",this).call(this),this._form.reset()}},{key:"setupDefaultText",value:function(){this._btnSave.textContent=this._btnSaveDefault}},{key:"setEventListeners",value:function(){var t=this;N(F(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(t._getInputValues()),t._btnSave.textContent="".concat(t._btnSave.textContent,"...")}))}}])&&Y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(E);function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==M(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===M(o)?o:String(o)),r)}var o}var G=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleElement=e,this._subtitleElement=n,this._avatarProfilBg=r}var e,n;return e=t,(n=[{key:"setUserInfo",value:function(t){this._avatarProfilBg.style.backgroundImage="url(".concat(t.avatar,")"),this._titleElement.textContent=t.name,this._subtitleElement.textContent=t.about}}])&&$(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function K(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(t,e)||function(t,e){if(t){if("string"==typeof t)return Q(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Q(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var W=new d({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66",headers:{authorization:"e674a970-710a-435e-8ca6-95eeadb2851d","Content-Type":"application/json"}}),X=new z(l,y),Z=new z(c,y),tt=new z(a,y);tt.enableValidation(),X.enableValidation(),Z.enableValidation(),n.addEventListener("click",(function(){ot.open(),tt.resetErrorAndClearInput()})),i.addEventListener("click",(function(){rt.open(),W.getUserInfo().then((function(n){var r;r=n,t.value=r.name,e.value=r.about})),X.resetErrorAndClearInput()})),u.addEventListener("click",(function(){et.open(),Z.resetErrorAndClearInput()}));var et=new H("#my-modal-cread",{formSubmit:function(t){Promise.all([W.getUserInfo(),W.addCardByServer(t)]).then((function(t){var e=K(t,2),n=e[0],r=e[1];r.myId=n._id,lt.renderItem(r),et.close()})).catch((function(t){return console.error("Ошибка при создании новой карточки: ".concat(t))})).finally((function(){return et.setupDefaultText()}))}}),nt=new x("#my-modal-image"),rt=new H("#my-modal-edit",{formSubmit:function(t){W.setUserInfo(t).then((function(t){ut.setUserInfo(t),rt.close()})).catch((function(t){return console.error("Ошибка при редактировании профиля: ".concat(t))})).finally((function(){return rt.setupDefaultText()}))}}),ot=new H("#my-modal-avatar",{formSubmit:function(t){W.setUserAvatar(t).then((function(t){ut.setUserInfo(t),ot.close()})).catch((function(t){return console.error("Ошибка при редактировании Аватарки:".concat(t))})).finally((function(){return ot.setupDefaultText()}))}}),it=new I("#my-modal-delete",{hendleDelete:function(t,e){W.deleteCardByServer(t).then((function(){e.target.closest(".element").remove(),it.close()})).catch((function(t){return console.error("Ошибка при удалении карточки:".concat(t))})).finally((function(){return it.setupDefaultText()}))}}),ut=new G(r,o,n);function at(t,e){it.open(t,e)}function ct(t,e){nt.open(t,e)}rt.setEventListeners(),et.setEventListeners(),nt.setEventListeners(),ot.setEventListeners(),it.setEventListeners();var lt=new g({renderer:function(t){var e,n;n=(e=new _(t,ct,s,at,(function(t,n){n.classList.contains("element__button-like_active")?W.deleteLike(t).then((function(t){e.changedLike(t.likes)})).catch((function(t){console.error("Ошибка при удалении лайка:".concat(t))})):W.addLike(t).then((function(t){e.changedLike(t.likes)})).catch((function(t){console.error("Ошибка при добавлении лайка:".concat(t))}))}))).getCard(),lt.addItemPrepend(n)}},f);Promise.all([W.getUserInfo(),W.getCards()]).then((function(t){var e=K(t,2),n=e[0],r=e[1];ut.setUserInfo(n),r.reverse().forEach((function(t){t.myId=n._id,lt.renderItem(t)}))})).catch((function(t){return console.error("Ошибка при создании начальных данных страницы: ".concat(t))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,